name: build native android libraries
on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
      
  pull_request:
    types: [opened, synchronize, reopened]  
    
  workflow_dispatch:
  
permissions:
  contents: read

env:
    BCG729_PATH:  ${{ github.workspace }}/lib/bcg729
    OPENSSL_PATH: ${{ github.workspace }}/lib/openssl
    OPUS_PATH: ${{ github.workspace }}/lib/opus
    PJSIP_PATH: ${{ github.workspace }}/lib/pjsip
    PJSIP_BUILD_OUT_PATH: ${{ github.workspace }}/outputs/pjsip-build-output
    SWIG_BUILD_OUT_PATH: ${{ github.workspace }}/outputs/swig-build-output
    OPUS_BUILD_OUT_PATH: ${{ github.workspace }}/outputs/opus-build-output
    BCG729_BUILD_OUT_PATH: ${{ github.workspace }}/outputs/bcg729-build-output
    ANDROID_BUILD_TOOLS: "34.0.0"
    TARGET_ANDROID_API: 28 
jobs:
  openh264:
    runs-on: ubuntu-latest
    
    steps:
       
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create Output Directory
        run: mkdir -p ${{ github.workspace }}/libopenh264-output

      - name: Set Permissions for Output Directory
        run: chmod -R 777 ${{ github.workspace }}/libopenh264-output

      - name: Build Docker Image
        run: |
          docker build -t openh264-builder ${{ github.workspace }}/res/docker/openh264

      - name: Run Docker Container 
        run: | 
          docker run --name openh264-build openh264-builder
          
      - name: Extract Artifacts from Container
        run: | 
          docker cp openh264-build:/root/outputs/libs ${{ github.workspace }}/libopenh264-output
           
      - name: Upload OpenH264 Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: openh264-android
          path: ${{ github.workspace }}/libopenh264-output
  
  openssl:
    runs-on: ubuntu-latest
    
    steps:
        
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create Output Directory
        run: mkdir -p ${{ github.workspace }}/openssl-output

      - name: Set Permissions for Output Directory
        run: chmod -R 777 ${{ github.workspace }}/openssl-output

      - name: Build Docker Image
        run: |
          docker build -t openssl-builder ${{ github.workspace }}/res/docker/openssl
        
      - name: Run Docker Container and Extract Artifacts
        run: |  
          docker run --name openssl-build openssl-builder
      
      - name: Extract Artifacts from Container
        run: |  
          docker cp openssl-build:/root/outputs/libs ${{ github.workspace }}/openssl-output
          

      - name: Upload openssl Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: openssl-android
          path: ./openssl-output

  bcg729:
    runs-on: ubuntu-latest
    
    steps:
        
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create Output Directory
        run: mkdir -p ${{ github.workspace }}/bcg729-output

      - name: Set Permissions for Output Directory
        run: chmod -R 777 ${{ github.workspace }}/bcg729-output

      - name: Build Docker Image
        run: |
          docker build -t bcg729-builder ${{ github.workspace }}/res/docker/bcg729
        
      - name: Run Docker Container 
        run: |
          docker run --name bcg729-build bcg729-builder
          
      - name: Extract Artifacts from Container
        run: |
          docker cp bcg729-build:/root/outputs/libs ${{ github.workspace }}/bcg729-output
 
      - name: Upload bcg729 Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bcg729-android
          path: ./bcg729-output 

  opus:
    runs-on: ubuntu-latest
      
    steps:
          
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Create Output Directory
        run: mkdir -p ${{ github.workspace }}/opus-output

      - name: Set Permissions for Output Directory
        run: chmod -R 777 ${{ github.workspace }}/opus-output

      - name: Build Docker Image
        run: |
          docker build -t opus-builder ${{ github.workspace }}/res/docker/opus
          
      - name: Run Docker Container
        run: docker run --name opus-build opus-builder
        
      - name: Extract Artifacts from Container
        run: | 
          docker cp opus-build:/root/outputs/libs ${{ github.workspace }}/opus-output

      - name: Upload opus Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: opus-android
          path: ./opus-output 

  