name: build native android libraries
on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
      
  pull_request:
    types: [opened, synchronize, reopened]  
    
  workflow_dispatch:
  
permissions:
  contents: read

env:
    #BASEDIR: /__w/libpjsua2maui/libpjsua2maui
    BCG729_PATH:  ${{ github.workspace }}/lib/bcg729
    OPENSSL_PATH: ${{ github.workspace }}/lib/openssl
    OPUS_PATH: ${{ github.workspace }}/lib/opus
    PJSIP_PATH: ${{ github.workspace }}/lib/pjsip
    PJSIP_BUILD_OUT_PATH: ${{ github.workspace }}/outputs/pjsip-build-output
    SWIG_BUILD_OUT_PATH: ${{ github.workspace }}/outputs/swig-build-output
    OPUS_BUILD_OUT_PATH: ${{ github.workspace }}/outputs/opus-build-output
    BCG729_BUILD_OUT_PATH: ${{ github.workspace }}/outputs/bcg729-build-output
    ANDROID_BUILD_TOOLS: "34.0.0"
    TARGET_ANDROID_API: 28 
jobs:
  openh264:
    runs-on: ubuntu-latest
    
    steps:
       
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: |
          docker build -t openh264-builder ${{ github.workspace }}/res/docker/openh264

      - name: Run Docker Container and Extract Artifacts
        run: | 
          mkdir -p ${{ github.workspace }}/output/libs
          docker run --name openh264-build -v ./output:/root/outputs/libs openh264-builder
          docker cp openh264-build:/root/outputs/libs ./output
      
      - name: Debug Container Files
        run: |
          docker exec openh264-build ls -l -R /root/outputs/libs
       
      - name: Upload OpenH264 Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: openh264-android
          path: ./output
  
  openssl:
    runs-on: ubuntu-latest
    
    steps:
        
      - name: Checkout repository
        uses: actions/checkout@v3

        
      - name: Build Docker Image
        run: |
          docker build -t openssl-builder ${{ github.workspace }}/res/docker/openssl

        
      - name: Run Docker Container and Extract Artifacts
        run: | 
          mkdir -p ${{ github.workspace }}/output/libs
          docker run --name openssl-build -v ./output:/root/outputs/libs openssl-builder
          docker cp openssl-build:/root/outputs/libs ./output

      - name: Debug Container Files
        run: |
          docker exec openssl-build ls -l -R /root/outputs/libs
        
      - name: Upload openssl Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: openssl-android
          path: ./output

  bcg729:
    runs-on: ubuntu-latest
    
    steps:
        
      - name: Checkout repository
        uses: actions/checkout@v3

        
      - name: Build Docker Image
        run: |
          docker build -t bcg729-builder ${{ github.workspace }}/res/docker/bcg729

        
      - name: Run Docker Container and Extract Artifacts
        run: |
          mkdir -p ${{ github.workspace }}/output/libs
          docker run --name bcg729-build -v ./output:/root/outputs/libs bcg729-builder
          docker cp bcg729-build:/root/outputs/libs ./output
      
      - name: Debug Container Files
        run: |
          docker exec bcg729-build ls -l -R /root/outputs/libs
        
      - name: Upload bcg729 Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bcg729-android
          path: ./output 

  opus:
    runs-on: ubuntu-latest
      
    steps:
          
      - name: Checkout repository
        uses: actions/checkout@v3

          
      - name: Build Docker Image
        run: |
          docker build -t opus-builder ${{ github.workspace }}/res/docker/opus

          
      - name: Run Docker Container and Extract Artifacts
        run: | 
          mkdir -p ${{ github.workspace }}/output/libs
          docker run --name opus-build -v ./output:/root/outputs/libs opus-builder
          docker cp opus-build:/root/outputs/libs ./output

      - name: Debug Container Files
        run: |
          docker exec opus-build ls -l -R /root/outputs/libs
          
      - name: Upload opus Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: opus-android
          path: ./output 